{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","DoneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","console","log","addProjectTask","UpdateProjectTask","created_At","getProjectTask","updatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9e830550.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_PROJECTS,\n  GET_PROJECT,\n  DELETE_PROJECT,\n} from \"../actions/types\";\n\n//returns promise, await means wait until promise is resolved\n\n//arrow function that returns the dispatch function\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/project\", project);\n    //console.log(res);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data, //this data is an array itself so in the reducer we dont have to use push because we essentially replace the array\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (window.confirm(\"Are you sure you want to delete this project?\")) {\n    await axios.delete(`/api/project/${id}`);\n\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for backlog actions\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n  render() {\n    //this refers to the individual project being rendered\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\">\n                      {\"  \"}Project Board\n                    </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\">{\"  \"}Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\">\n                    {\"  \"}Delete Project\n                  </i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    //this.props.project refers to the state project and we are pulling off the array of projects\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  getProjects: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  //this refers to the state project which contains the array of projects and the one project when selected\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    //post => LoginRequest\n\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    //extract token from res.data\n    //console.log(res.data);\n    const { token } = res.data;\n    //store the token in the local storage\n    localStorage.setItem(\"jwtToken\", token);\n    //set our token in the headers\n    setJWTToken(token);\n    //decode token on REACT end\n    const decoded = jwt_decode(token);\n    //console.log(decoded);//produces the payload in the token\n    //dispatch to securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n\n  //deletes the header under \"Authorization\"\n  setJWTToken(false);\n\n  //the valid token will turn to false\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" /> {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Task Manager\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\n//refactor for hooks\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hook\n  //if the forms is submitted that is not valid, the component will received errors from state\n  //which will shows up in nextProps\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    //console.log(newProject);\n\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectIdentifier,\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n//telling react that this is a required prop type for this component to work properly\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false,\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"../reducers/errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\n//enhancer\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  //this is for devtools in chrome\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set State\n\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    //match contains the id that we pass to the params\n    const { id } = this.props.match.params;\n\n    //called immediatley so this returns props to this component which called componentWillReceivedProps passing in the project\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectIdentifier,\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    disabled\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  render() {\n    const { project_task } = this.props;\n\n    let priorityString;\n\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n            className=\"btn btn-danger ml-4\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}. This action cannot be undone.`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n\n    let inProgressItems = [];\n\n    let DoneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        DoneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {DoneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No ProjectTasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id, //need props to extract this\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  //onChange\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n  //onSubmit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n\n    console.log(newTask);\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      created_At: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At,\n    } = nextProps.project_task;\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At,\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updatedProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      created_At: this.state.created_At,\n    };\n\n    //console.log(updatedProjectTask);\n\n    //console.log(updatedProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updatedProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Task Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\n//Setting in App js makes sure that when we reload, the token will be set in the state\n//this works when we adjust any route\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n\n          {\n            //public routes\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          {\n            //private routes\n            //need to wrap securedroutes with Switch\n          }\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}